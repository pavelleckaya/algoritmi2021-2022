#include <vector>
#include <iostream>

bool ans(int mask1, int mask2, int n) {
    int ans = 0;
    for (int i = 0; i < n - 1; ++i) {
        if (((mask1 >> i) & 1) == ((mask2 >> i) & 1) && ((mask1 >> (i + 1)) & 1) == ((mask2 >> (i + 1)) & 1) 
            && ((mask1 >> (i + 1)) & 1) == ((mask1 >> i) & 1)) {
                return false;
        }
    }
    return true;
}

void print(std::vector<std::vector<int>>& arr) {
    for (int i = 0; i < arr.size(); ++i) {
        for (int j = 0; j < arr[i].size(); ++j) {
            std::cout << arr[i][j] << ' ';
        }
        std::cout << '\n';
    }
}

int Uzor(int n, int m) {
    if (n > m) {
        int tmp = n;
        n = m;
        m = tmp;
    }
    std::vector<std::vector<int>> dp(m, std::vector<int>(1 << n));
    // dp[i][mask] - дорожка длинны i оканчивающяяся на mask
    for (int mask1 = 0; mask1 < (1 << n); ++mask1) {
        dp[0][mask1] = 1;
    }

    for (int i = 1; i < m; ++i) {
        for (int mask1 = 0; mask1 < (1 << n); ++mask1) {
            for (int mask2 = 0; mask2 < (1 << n); ++mask2) {
                if (ans(mask1, mask2, n)) {
                    dp[i][mask1] += dp[i - 1][mask2];
                }
            }
        }
    }

    int answer = 0;
    for (int mask1 = 0; mask1 < (1 << n); ++mask1) {
        answer += dp[m - 1][mask1];
    }
    return answer;
}

int main()
{
    int n, m;
    std::cin >> n >> m;
    int answer = Uzor(n, m);
    std::cout << answer;
}
